library(blogdown)
blogdown::serve_site()
remotes::install_github('rstudio/blogdown')
library(blogdown)
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::serve_site()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = F)
# Chunk 2: pkg-load
library(tidyverse) # most of the required packages
library(magrittr) # for working in pipes (%>%) chaining commands into one
library(here) # working with projects nicely organized
library(haven)
library(janitor)
library(gridExtra)
library(grid)
library(ghibli)
library(readxl)
library(googlesheets4)
my_theme <- theme(
legend.position = "right",
legend.direction = "vertical")
theme_set(theme_classic() +theme(legend.position = "right",
legend.direction = "vertical"))
col_base <- rev(ghibli_palettes$MarnieMedium1)[2]
pal <- "LaputaMedium"
ghibli_palettes$LaputaMedium[1:3] <- ghibli_palettes$LaputaLight[5:7]
#pal <- "LaputaMedium"
col_base <- rev(ghibli_palettes$LaputaMedium)[2]
test<- ghibli_palettes
# Chunk 3: load-data
ord_areas <- c(
"Welfare and social inclusion",
"Employment and welfare",
"Family support",
"Health",
"Energy efficiency",
"Education",
"Capital market",
"Simplification"
)
path_data <- here() %>% str_remove("analysis_interim") %>% paste0("results/")
bp <- read_excel(paste0(path_data,"updated_dia_policies_simplified.xlsx"))
bp %<>% rename(
ms = MS,
year = Fiscal_year,
dia = n_dia_exercises,
exp_rev = expenditure_or_revenue,
area = policy_area,
ag_area = aggregatedpolicyareas,
gini = `GiniCoefficient`
) %>% select(-gini) %>%
mutate(
area = factor(area,
levels = c(
"Welfare and social inclusion",
"Employment and welfare",
"Family support",
"Health",
"Energy efficiency",
"Education",
"Capital market",
"Simplification"
)
)
)
gini <- read_excel(here("data", "gini.xls"))
gini %<>% slice(8:n()) %>%
row_to_names(row = 1) %>%
slice(11:n()) %>%
rename(ms = `GEO/TIME`) %>%
pivot_longer(`2010`:`2019`, names_to = "year", values_to = "gini") %>%
mutate(gini = round(as.numeric(gini), 1))
bp %<>%  left_join(
gini %>% mutate(year = as.numeric(year)),
by = c("ms", "year")
)
save(bp, gini, file = here("data", "bp.RData"))
# Chunk 4: compute-main-vars
bp_sum  <- bp %>%
group_by(ms, year) %>%
summarise(
n_dia = max(dia),
n_policy = ifelse(n_dia > 0, n(), 0),
mean_n_policy = ifelse(n_dia > 0, n() / n_dia, 0),
any_dia = ifelse(n_dia > 0, 1, 0)
)
bp_distinct_policies <-
bp %>%
distinct(ms, year, policy, .keep_all = T) %>%
group_by(ms, year) %>%
mutate(
n_dia = max(dia)
) %>%
group_by(ms, year) %>%
summarise(
n_distinct_policy = ifelse(n_dia > 0, n(), 0)
) %>% distinct(ms, year, n_distinct_policy, .keep_all = T)
bp_sum %<>% left_join(bp_distinct_policies)
bp_dist_rev_exp <-
bp %>%
distinct(ms, year, policy, .keep_all = T) %>%
group_by(ms, year) %>%
mutate(
n_dia = max(dia)
) %>%
group_by(ms, year, exp_rev) %>%
summarise(
n_distinct_policy = ifelse(n_dia > 0, n(), NA)
) %>% distinct(ms, year, n_distinct_policy, exp_rev, .keep_all = T) %>%
#complete()
drop_na()
bp_dist_rev_exp_area <-
bp %>%
distinct(ms, year, policy, .keep_all = T) %>%
group_by(ms, year) %>%
mutate(
n_dia = max(dia)
) %>%
group_by(ms, year, exp_rev, area,) %>%
summarise(
n_distinct_policy = ifelse(n_dia > 0, n(), NA)
) %>% distinct(ms, year, n_distinct_policy, exp_rev, area, .keep_all = T) %>%
#complete()
drop_na()
# Chunk 5: by-year
bp_sum_yr <- bp_sum %>%
group_by(year) %>%
mutate(mean_n_distinct_policy = ifelse(n_distinct_policy == 0, NA, n_distinct_policy),
n_dia = ifelse(n_dia == 0, NA, n_dia)) %>%
summarise(any_dia = sum(any_dia > 0),
mean_n_distinct_policy = mean(mean_n_distinct_policy, na.rm = T),
mean_n_dia = mean(n_dia, na.rm = T))
# # countries doing dia
p1 <- bp_sum_yr %>%
ggplot(aes(x = year, y = any_dia)) +
geom_point(color = col_base, size = 3) +
geom_line(color = col_base, size = 1.5) +
scale_y_continuous(limits = c(0, 20)) +
labs(x = "", y  = "Nr. of Member States") +
theme(text = element_text(size=16)) +
geom_text(aes(label = any_dia), nudge_y = 1,
size = 5)
p1
ggsave(here("output/figures", "dia.png"))
# avg # of DIA exercises
p2 <- bp_sum_yr %>%
pivot_longer(c(mean_n_dia, mean_n_distinct_policy)) %>%
ggplot(aes(x = year, y = value,
color = factor(name, labels = c("Avg. nr. of DIA occurences", "Avg. nr. of policies")))) +
geom_point( size = 3) +
geom_line( size = 1.5) +
scale_y_continuous(limits = c(0, 15)) +
scale_color_ghibli_d(pal, direction = -1) +
labs(x = "", y  = "", color = "") +
theme(text = element_text(size=16),
legend.position = c(0.7, 0.9)) +
geom_text(aes(label = round(value, 1)), nudge_y = 0.4,
size = 4, color = "black")
p2
ggsave(here("output/figures", "ndia_npolicies.png"))
# avg # of distinct policies
# Avg # of distinct revenue and expenditure policies
p4 <-
bp_dist_rev_exp %>%
ungroup() %>%
# group_ by(year, ms) %>%
# count(exp_rev) %>%
# group_by(year, ms) %>%
complete(exp_rev, ms, year,
fill = list(n_distinct_policy = 0)) %>%
group_by(ms, year) %>%
mutate(any = sum(n_distinct_policy)) %>%
arrange(ms, year) %>%
ungroup() %>% filter(any != 0) %>%
group_by(year, exp_rev) %>%
summarise(
mean_n_distinct_policy = mean(n_distinct_policy, na.rm = T)
) %>%
ggplot(aes(x = year, y = mean_n_distinct_policy,
color = factor(exp_rev, labels = c("Expenditure", "Revenue")))) +
geom_point(size = 3) +
geom_line(size = 1.5) +
scale_color_ghibli_d(pal, direction = -1) +
scale_y_continuous(limits = c(0, 10)) +
labs(x = "", y  = "Avg. nr. of policies", color = "") +
theme(text = element_text(size=16)) +
geom_text(aes(label = round(mean_n_distinct_policy, 1)), nudge_y = 0.4,
size = 5, color = "black") +
theme(legend.position = c(0.8, 0.9))
p4
ggsave(here("output/figures", "exp_rev.png"))
# Avg # of distinct revenue by policy area
# Avg # of distinct revenue and expenditure policies
p5 <- bp_dist_rev_exp_area %>%
group_by(year, exp_rev, area) %>%
summarise(
mean_n_distinct_policy = mean(n_distinct_policy, na.rm = T)
) %>% ungroup() %>%
#mutate(area = str_wrap(area, 20)) %>%
complete(exp_rev, area, year,
fill = list(mean_n_distinct_policy = 0)) %>%
ggplot(aes(x = factor(year), y = mean_n_distinct_policy,
fill = factor(area, labels = str_wrap(ord_areas, 20))
)) +
# ggplot(aes(x = factor(str_wrap(area, 20)), y = mean_n_distinct_policy,
#             fill = factor(year))) +
geom_col(position = position_dodge2(), color = "black") +
scale_fill_ghibli_d(pal, direction = -1) +
labs(x= "", y = paste("Avg. nr. of", "policies"), fill = "") +
# scale_y_continuous(breaks = seq(-2, 16, 2), minor_breaks = NULL) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
legend.position = "bottom") +
facet_wrap(~factor(exp_rev, labels = c("Expenditure policies", "Revenue policies")),
nrow = 2)
p5
ggsave(here("output/figures", "exp_rev_policy.png"))
# Chunk 6: by-counttry-year
# number of DIA in each MS
p6 <- bp_sum %>%
mutate(any_dia = ifelse(n_dia > 0, 1, 0)) %>%
ggplot(aes(x = fct_rev(ms), y = year
, fill = factor(any_dia)
)) +
# scale_fill_ghibli_d(pal, direction = -1) +
geom_tile(color = "white", alpha = 1, show.legend = FALSE, height = 1) +
# scale_fill_ghibli_d("MarnieLight1" , direction = -1) +
scale_fill_manual(values = c("#E8E8E8", col_base)) +
# geom_text(aes(label = ifelse(n_dia > 0, n_dia, NA))) +
geom_text(aes(label = if_else(n_dia > 0, as.character(n_dia), "-")),
size = 4) +
labs(x = "", y  = "") +
theme(
axis.line = element_blank(),
axis.ticks = element_blank()
) + coord_flip() +
scale_y_continuous(breaks = 2015:2020)
p6
ggsave(here("output/figures", "cnt_dia.png"))
# Revenue vs Expnediture by MS
all_comb <- expand.grid(ms = bp %>% pull(ms) %>% unique,
year = 2015:2020,
area = bp %>% pull(area) %>% unique,
exp_rev = c("E", "R"))
bp1 <- bp %>% left_join(bp_sum)
p7 <- all_comb %>%  left_join(bp1) %>%
filter(!is.na(exp_rev)) %>%
group_by(ms, year) %>%
mutate(any_dia_year = sum(any_dia == 1, na.rm = T)) %>%
filter(any_dia_year > 0) %>%
ungroup() %>%
distinct(ms, year, policy, .keep_all = T) %>%
group_by(ms, year, exp_rev) %>%
summarise(n = sum(any_dia == 1, na.rm = T)) %>%
ungroup() %>%
complete(exp_rev, ms, year,
fill = list(n = 0)) %>%
group_by(ms, year) %>%
mutate(any = sum(n)) %>%
filter(any != 0) %>%
ungroup() %>%
#arrange(ms, year, exp_rev)
#count(exp_rev) %>%
ggplot(aes(x = ms, y = n,
fill = factor(exp_rev, labels = c("Expenditure", "Revenue")))) +
geom_col(position = position_dodge2(), color = "black") +
facet_wrap(~year, scales = "free_x") +
scale_fill_ghibli_d(pal, direction = -1) +
labs(x= "", y = "Number of policies", fill = "") +
theme(legend.position = c(0.9, 0.8)) +
scale_y_continuous(breaks = seq(0, 16, 2), minor_breaks = NULL) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
legend.position = "bottom")
p7
ggsave(here("output/figures", "cnt_rev_exp.png"))
by_rev_exp <- function(rev_exp, type) {
all_comb %>%
left_join(bp1) %>%
# bp1 %>%
distinct(ms, year, policy, .keep_all = T) %>%
group_by(ms, year) %>%
mutate(any_dia_year = sum(any_dia == 1, na.rm = T)) %>%
filter(any_dia_year > 0 & !is.na(area)) %>%
filter(exp_rev == rev_exp) %>%
group_by(ms, year, area) %>%
summarise(n = sum(any_dia == 1, na.rm = T)) %>%
ungroup() %>%
complete(area, ms, year,
fill = list(n = 0)) %>%
group_by(ms, year) %>%
mutate(any = sum(n)) %>%
filter(any != 0) %>%
ungroup() %>%
#arrange(ms, year, exp_rev)
#count(exp_rev) %>% fct_relevel(f, "a", after = Inf)
ggplot(aes(x = ms, y = n,
fill = area)) +
geom_col(position = position_dodge2(), color = "black") +
facet_wrap(~year, scales = "free_x") +
#scale_fill_ghibli_d(pal, direction = -1) +
labs(x= "", y = paste("Number of", type, "policies"), fill = "") +
theme(legend.position = c(0.9, 0.8)) +
scale_y_continuous(breaks = seq(0, 16, 2), minor_breaks = NULL) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
legend.position = "bottom")
}
p8 <- by_rev_exp("E", "expenditure") +
scale_fill_manual(
values = c(
rev(ghibli_palettes$LaputaMedium)[1:4],
ghibli_palettes$MononokeMedium[1:4]
)
)
p8
ggsave(here("output/figures", "cnt_exp.png"))
p9 <- by_rev_exp("R", "revenue") +
scale_fill_manual(
values = c(
rev(ghibli_palettes$LaputaMedium)[1:4],
ghibli_palettes$MononokeMedium[1:4]
)
)
p9
ggsave(here("output/figures", "cnt_rev.png"))
library(tidyverse)
library(readxl)
df <- read_excel("/home/sergiu/Documents/Drive/Shared/IRVAPP Ricerca/Progetti/2021_LAZIO/2_data/Database reindustrializzazione 20210329.xlsx")
library(janitor)
df <- read_excel(
"/home/sergiu/Documents/Drive/Shared/IRVAPP Ricerca/Progetti/2021_LAZIO/2_data/Database reindustrializzazione 20210329.xlsx") %>%
clean_names()
n_imp %>% distinct(df, id_met)
n_imp <- distinct(df, id_met) %>% nrow()
n_imp <- distinct(df, partita_iva) %>% nrow()
n_imp <- distinct(df, codice_fiscale) %>% nrow()
n_imp <- distinct(df, partita_iva) %>% nrow()
n_imp_met <- distinct(df, id_met) %>% nrow()
n_imp_codice <- distinct(df, codice_fiscale) %>% nrow()
n_imp_iva <- distinct(df, partita_iva) %>% nrow()
library(skimr)
skim(df)
skim(df)
distinct(df, id_met) %>% tabyl(accettazione)
distinct(df, id_met, .keep_all = T) %>% tabyl(accettazione)
df %>% distinct(denominazione_impresa, .keep_all = T) %>% tabyl(accettazione)
df %>% distinct(denominazione_impresa, .keep_all = T) %>% tabyl(accettazione)
379 + 203+ 105
n_imp_met <- distinct(df, id_met) %>% nrow()
n_imp_met
